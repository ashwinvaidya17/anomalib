:py:mod:`anomalib.data`
=======================

.. py:module:: anomalib.data

.. autoapi-nested-parse::

   Anomalib Datasets.



Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   utils/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   inference/index.rst
   mvtec/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.data.InferenceDataset



Functions
~~~~~~~~~

.. autoapisummary::

   anomalib.data.get_datamodule



.. py:class:: InferenceDataset(path: Union[str, pathlib.Path], pre_process: Optional[anomalib.pre_processing.PreProcessor] = None, image_size: Optional[Union[int, Tuple[int, int]]] = None, transform_config: Optional[Union[str, albumentations.Compose]] = None)

   Bases: :py:obj:`torch.utils.data.dataset.Dataset`

   Inference Dataset to perform prediction.

   .. py:method:: __len__(self) -> int

      Get the number of images in the given path.


   .. py:method:: __getitem__(self, index: int) -> Any

      Get the image based on the `index`.



.. py:function:: get_datamodule(config: Union[omegaconf.DictConfig, omegaconf.ListConfig]) -> pytorch_lightning.LightningDataModule

   Get Anomaly Datamodule.

   :param config: Configuration of the anomaly model.
   :type config: Union[DictConfig, ListConfig]

   :returns: PyTorch Lightning DataModule


