:py:mod:`anomalib.models.dfm.model`
===================================

.. py:module:: anomalib.models.dfm.model

.. autoapi-nested-parse::

   DFM: Deep Feature Kernel Density Estimation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.models.dfm.model.DfmLightning




.. py:class:: DfmLightning(hparams: Union[omegaconf.DictConfig, omegaconf.ListConfig])

   Bases: :py:obj:`anomalib.models.components.AnomalyModule`

   DFM: Deep Featured Kernel Density Estimation.

   .. py:method:: configure_optimizers() -> None
      :staticmethod:

      DFM doesn't require optimization, therefore returns no optimizers.


   .. py:method:: training_step(self, batch, _)

      Training Step of DFM.

      For each batch, features are extracted from the CNN.

      :param batch: Input batch
      :type batch: Dict[str, Tensor]
      :param _: Index of the batch.

      :returns: Deep CNN features.


   .. py:method:: on_validation_start(self) -> None

      Fit a KDE Model to the embedding collected from the training set.


   .. py:method:: validation_step(self, batch, _)

      Validation Step of DFM.

      Similar to the training step, features are extracted from the CNN for each batch.

      :param batch: Input batch
      :type batch: List[Dict[str, Any]]

      :returns: Dictionary containing FRE anomaly scores and ground-truth.



