:py:mod:`anomalib.models.dfkde.model`
=====================================

.. py:module:: anomalib.models.dfkde.model

.. autoapi-nested-parse::

   DFKDE: Deep Feature Kernel Density Estimation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   anomalib.models.dfkde.model.DfkdeLightning




.. py:class:: DfkdeLightning(hparams: Union[omegaconf.dictconfig.DictConfig, omegaconf.listconfig.ListConfig])

   Bases: :py:obj:`anomalib.models.components.AnomalyModule`

   DFKDE: Deep Featured Kernel Density Estimation.

   :param hparams: Model params
   :type hparams: Union[DictConfig, ListConfig]

   .. py:method:: configure_optimizers()
      :staticmethod:

      DFKDE doesn't require optimization, therefore returns no optimizers.


   .. py:method:: training_step(self, batch, _batch_idx)

      Training Step of DFKDE. For each batch, features are extracted from the CNN.

      :param batch: Batch containing image filename, image, label and mask
      :type batch: Dict[str, Any]
      :param _batch_idx: Index of the batch.

      :returns: Deep CNN features.


   .. py:method:: on_validation_start(self) -> None

      Fit a KDE Model to the embedding collected from the training set.


   .. py:method:: validation_step(self, batch, _)

      Validation Step of DFKDE.

      Similar to the training step, features are extracted from the CNN for each batch.

      :param batch: Input batch

      :returns: Dictionary containing probability, prediction and ground truth values.



